
> molam-id@1.0.0 test
> node src/test_runner.js

══════════════════════════════════════════════════════════════
  MOLAM-ID - Test Suite Complet (Briques 1-9)
══════════════════════════════════════════════════════════════

Date: 2025-10-24T15:10:30.362Z
Tests to run: 10


🧪 Running Brique 1 - Table molam_users...
   File: test_brique1.js
🔍 Test Brique 1 – Table molam_users

✅ Vérification de la table molam_users...
Table "public.molam_users"
       Column       |           Type           | Collation | Nullable |        Default        
--------------------+--------------------------+-----------+----------+-----------------------
 id                 | uuid                     |           | not null | gen_random_uuid()
 molam_id           | text                     |           | not null | 
 phone_e164         | text                     |           |          | 
 email              | text                     |           |          | 
 password_hash      | text                     |           |          | 
 ussd_pin_hash      | text                     |           |          | 
 role_profile       | text[]                   |           | not null | ARRAY['client'::text]
 status             | text                     |           | not null | 'pending'::text
 lang_pref          | text                     |           | not null | 'en'::text
 currency_pref      | text                     |           | not null | 'USD'::text
 kyc_status         | text                     |           | not null | 'none'::text
 kyc_reference      | text                     |           |          | 
 metadata           | jsonb                    |           |          | '{}'::jsonb
 created_at         | timestamp with time zone |           | not null | now()
 updated_at         | timestamp with time zone |           | not null | now()
 deleted_at         | timestamp with time zone |           |          | 
 user_type          | text                     |           |          | 'customer'::text
 is_kyc_verified    | boolean                  |           |          | false
 kyc_level          | text                     |           |          | 'P0'::text
 kyc_provider       | text                     |           |          | 
 kyc_provider_id    | text                     |           |          | 
 created_via        | text                     |           |          | 'app'::text
 twofa_enabled      | boolean                  |           |          | false
 twofa_methods      | text[]                   |           |          | ARRAY[]::text[]
 twofa_totp_secret  | text                     |           |          | 
 twofa_backup_codes | text[]                   |           |          | 
Indexes:
    "molam_users_pkey" PRIMARY KEY, btree (id)
    "idx_molam_users_phone" btree (phone_e164)
    "idx_molam_users_status" btree (status)
    "idx_users_kyc_level" btree (kyc_level)
    "idx_users_user_type" btree (user_type)
    "molam_users_email_key" UNIQUE CONSTRAINT, btree (email)
    "molam_users_molam_id_key" UNIQUE CONSTRAINT, btree (molam_id)
    "molam_users_phone_e164_key" UNIQUE CONSTRAINT, btree (phone_e164)
Referenced by:
    TABLE "molam_audit_logs" CONSTRAINT "molam_audit_logs_actor_fkey" FOREIGN KEY (actor) REFERENCES molam_users(id) ON DELETE SET NULL
    TABLE "molam_authz_decisions" CONSTRAINT "molam_authz_decisions_user_id_fkey" FOREIGN KEY (user_id) REFERENCES molam_users(id) ON DELETE CASCADE
    TABLE "molam_external_accounts" CONSTRAINT "molam_external_accounts_user_id_fkey" FOREIGN KEY (user_id) REFERENCES molam_users(id) ON DELETE CASCADE
    TABLE "molam_kyc_docs" CONSTRAINT "molam_kyc_docs_user_id_fkey" FOREIGN KEY (user_id) REFERENCES molam_users(id) ON DELETE CASCADE
    TABLE "molam_policies" CONSTRAINT "molam_policies_created_by_fkey" FOREIGN KEY (created_by) REFERENCES molam_users(id)
    TABLE "molam_roles" CONSTRAINT "molam_roles_granted_by_fkey" FOREIGN KEY (granted_by) REFERENCES molam_users(id)
    TABLE "molam_roles" CONSTRAINT "molam_roles_user_id_fkey" FOREIGN KEY (user_id) REFERENCES molam_users(id) ON DELETE CASCADE
    TABLE "molam_sessions" CONSTRAINT "molam_sessions_user_id_fkey" FOREIGN KEY (user_id) REFERENCES molam_users(id) ON DELETE CASCADE
    TABLE "molam_token_blacklist" CONSTRAINT "molam_token_blacklist_user_id_fkey" FOREIGN KEY (user_id) REFERENCES molam_users(id) ON DELETE CASCADE
    TABLE "molam_user_auth" CONSTRAINT "molam_user_auth_user_id_fkey" FOREIGN KEY (user_id) REFERENCES molam_users(id) ON DELETE CASCADE
    TABLE "molam_user_devices" CONSTRAINT "molam_user_devices_user_id_fkey" FOREIGN KEY (user_id) REFERENCES molam_users(id) ON DELETE CASCADE
    TABLE "molam_user_roles" CONSTRAINT "molam_user_roles_granted_by_fkey" FOREIGN KEY (granted_by) REFERENCES molam_users(id)
    TABLE "molam_user_roles" CONSTRAINT "molam_user_roles_user_id_fkey" FOREIGN KEY (user_id) REFERENCES molam_users(id) ON DELETE CASCADE
    TABLE "molam_verification_codes" CONSTRAINT "molam_verification_codes_user_id_fkey" FOREIGN KEY (user_id) REFERENCES molam_users(id) ON DELETE CASCADE

✅ Insertion d'un utilisateur...

✅ Vérification de l'insertion...
molam_id      |           email           | status 
-------------------+---------------------------+--------
 MOLAM-SN-40793339 | test_b5_09271695@molam.sn | active
 MOLAM-SN-59180672 | admin_brique66@molam.sn   | active
 MOLAM-SN-38276369 | client_brique66@molam.sn  | active
 MOLAM-SN-01084865 | auto_test@molam.sn        | active
 MOLAM-SN-18361091 | test_17239970@molam.sn    | active
 MOLAM-SN-00000001 | brique1@molam.sn          | active
(6 rows)

✅ Suppression de l'utilisateur...

🎉 Brique 1 validée !
✅ Brique 1 - Table molam_users - PASSED

🧪 Running Brique 2 - Token refresh...
   File: test_brique2.js
🔍 Test Brique 2 – Tables de support

✅ Vérification des tables...
List of relations
 Schema |           Name           | Type  | Owner 
--------+--------------------------+-------+-------
 public | molam_audit_logs         | table | molam
 public | molam_authz_cache        | table | molam
 public | molam_authz_decisions    | table | molam
 public | molam_external_accounts  | table | molam
 public | molam_failed_logins      | table | molam
 public | molam_kyc_docs           | table | molam
 public | molam_permissions        | table | molam
 public | molam_policies           | table | molam
 public | molam_rate_limits        | table | molam
 public | molam_refresh_tokens     | table | molam
 public | molam_revoked_tokens     | table | molam
 public | molam_role_permissions   | table | molam
 public | molam_roles              | table | molam
 public | molam_roles_catalog      | table | molam
 public | molam_sessions           | table | molam
 public | molam_token_blacklist    | table | molam
 public | molam_user_auth          | table | molam
 public | molam_user_devices       | table | molam
 public | molam_user_roles         | table | molam
 public | molam_users              | table | molam
 public | molam_verification_codes | table | molam
 public | molam_webhook_events     | table | molam
(22 rows)

✅ Insertion d'un utilisateur de test...

✅ Création d'un rôle associé...

✅ Création d'une session...

✅ Création d'un audit log...

✅ Vérification du rôle, session et log...
count 
-------
     7
(1 row)
count 
-------
    12
(1 row)
count 
-------
   164
(1 row)

✅ Suppression de l'utilisateur et cascade...

🎉 Brique 2 validée !
✅ Brique 2 - Token refresh - PASSED

🧪 Running Brique 3 - Logout...
   File: test_brique3.js
🔍 Vérification de l'accessibilité de l'API...
✅ API accessible

🧪  Signup
❌  Signup échoué : 409 Conflict: {"error":"Email ou téléphone déjà utilisé"}

🧪  Login
❌  Login échoué : 401 Unauthorized: {"error":"Identifiants invalides"}

🧪  Refresh token
❌  Refresh token échoué : 400 Bad Request: {"error":"Token requis"}

🧪  Logout
❌  Logout échoué : 400 Bad Request: {"error":"Token requis"}

🧪  Vérification des logs d'audit
        action         |                                                                            meta                                                                             
-----------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------
 signup                | {"source": "test"}
 login                 | {"source": "api"}
 signup_complete       | {"has_password": true, "has_ussd_pin": false}
 signup_verify_success | {"channel": "sms", "verification_id": "2f7ae9e1-3a18-4cbb-a7ee-669fda04695d"}
 signup_init           | {"email": "other_17239970@molam.sn", "phone": null, "channel": "email", "user_type": "customer", "verification_id": "a526cf43-81bf-4e47-b768-18cf773c8b5f"}
(5 rows)


✅  Vérification des logs d'audit OK

🧪  Vérification des hashs
✅  Vérification des hashs OK

🧪  Décodage JWT
❌  Décodage JWT échoué : Pas de token disponible (les tests précédents ont échoué)

🎉  Tous les tests de la Brique 3 ont été exécutés !
✅ Brique 3 - Logout - PASSED

🧪 Running Brique 4 - Onboarding foundations...
   File: test_brique4_foundations.js
🔧 Configuration DB: { host: 'localhost', port: '5432', user: 'molam', database: 'molam' }
🔍 Test Brique 4 - Fondations (Sécurité & Migrations)


🧪  Génération et hash OTP
   OTP généré: 753015
✅ Test de connexion réussi: 2025-10-24T15:10:36.664Z
   Hash: $2b$10$KEPTIeDFC2/Qn...
✅  Génération et hash OTP OK

🧪  Hash mot de passe avec pepper
   Hash: $2b$10$lOrsHfrK/Ak5h...
✅  Hash mot de passe avec pepper OK

🧪  Signature et vérification HMAC
   Signature: 237cced3524fa3c8c9ac...
   ✓ Signatures invalides correctement rejetées
✅  Signature et vérification HMAC OK

🧪  Signature et vérification HMAC
   Signature: 237cced3524fa3c8c9ac...
   ✓ Signatures invalides correctement rejetées
✅  Signature et vérification HMAC OK

🧪  Normalisation numéro de téléphone
   770001111 -> +221770001111
   0770001111 -> +221770001111
   +221770001111 -> +221770001111
   77 000 11 11 -> +221770001111
✅  Normalisation numéro de téléphone OK

🧪  Validation format email
   2 valides, 3 invalides
✅  Validation format email OK

🧪  Calcul expiration OTP
   Expire dans: 15.00 minutes
✅  Calcul expiration OTP OK

🧪  Génération device fingerprint
   Fingerprint: bae3f620fb173411e554...
✅  Génération device fingerprint OK

🧪  Génération nonce pour replay protection
   Nonce 1: c1f8cb2157708ba3c33ed4f9da13f02e
   Nonce 2: 828437215aef4e9a1f95745a50b97b3d
✅  Génération nonce pour replay protection OK

🧪  Vérification structure base de données
   Tables trouvées: 22
   - molam_audit_logs
   - molam_authz_cache
   - molam_authz_decisions
   - molam_external_accounts
   - molam_failed_logins
   - molam_kyc_docs
   - molam_permissions
   - molam_policies
   - molam_rate_limits
   - molam_refresh_tokens
   - molam_revoked_tokens
   - molam_role_permissions
   - molam_roles
   - molam_roles_catalog
   - molam_sessions
   - molam_token_blacklist
   - molam_user_auth
   - molam_user_devices
   - molam_user_roles
   - molam_users
   - molam_verification_codes
   - molam_webhook_events
✅  Vérification structure base de données OK

🧪  Vérification colonnes onboarding molam_users
   Colonnes: is_kyc_verified, ussd_pin_hash, user_type, kyc_level, created_via
✅  Vérification colonnes onboarding molam_users OK

🧪  Insertion code de vérification
   Code ID: 1bfff120-e954-490f-97a4-53de7f70a73f
✅  Insertion code de vérification OK

🧪  Rate limiting - tentatives autorisées
   Tentative 1: remaining = 2
   Tentative 2: remaining = 1
✅  Rate limiting - tentatives autorisées OK

🧪  Rate limiting - blocage après dépassement
   ✓ Correctement bloqué: Rate limit exceeded. Retry after 3600 seconds.
✅  Rate limiting - blocage après dépassement OK

🧪  Stockage événement webhook
   Event ID: 34b22b3d-a654-40f3-8bc8-4bda131ed458
   Created: Fri Oct 24 2025 15:10:37 GMT+0000 (temps universel coordonné)
   ✓ Protection contre les doublons active
✅  Stockage événement webhook OK

🎉  Tous les tests de fondations Brique 4 réussis !
✅ Brique 4 - Onboarding foundations - PASSED

🧪 Running Brique 4 - Onboarding flow...
   File: test_brique4_onboarding.js
🔍 Test Brique 4 - Onboarding Complet

📱 Téléphone de test: 7718637496
📧 Email de test: test_18637496@molam.sn


🧪  Signup Init - SMS
   Verification ID: c9fa6916-f876-40c8-86f6-e0802bcf4afa
   Canal: sms
   Expire dans: 900s
   🔑 OTP (dev): 365949
✅  Signup Init - SMS OK

🧪  Signup Init - Email (second test)
   Verification ID: 9c2f26e0-e104-4649-95d6-6dc9e0ea604f
   Canal: email
✅  Signup Init - Email (second test) OK

🧪  Signup Verify - Code incorrect
   ✓ Code incorrect rejeté
✅  Signup Verify - Code incorrect OK

🧪  Signup Verify - Code correct
   Message: Vérification réussie
   MOLAM ID: MOLAM-SN-95209686
   Prochaine étape: complete_profile
✅  Signup Verify - Code correct OK

🧪  Signup Complete - Sans mot de passe
   ✓ Mot de passe requis
✅  Signup Complete - Sans mot de passe OK

🧪  Signup Complete - Mot de passe faible
   ✓ Mot de passe faible rejeté
✅  Signup Complete - Mot de passe faible OK

🧪  Signup Complete - Mot de passe valide
   Message: Inscription terminée avec succès
   MOLAM ID: MOLAM-SN-95209686
   KYC Level: P0
✅  Signup Complete - Mot de passe valide OK

🧪  Signup Init - Doublon détecté
   ✓ Doublon correctement rejeté
✅  Signup Init - Doublon détecté OK

🧪  Vérification BDD - Utilisateur créé
     molam_id      |   phone_e164   | status | user_type | kyc_level 
-------------------+----------------+--------+-----------+-----------
 MOLAM-SN-95209686 | +2217718637496 | active | customer  | P0
(1 row)


✅  Vérification BDD - Utilisateur créé OK

🧪  Vérification BDD - Rôle assigné
 module |  role  
--------+--------
 id     | client
(1 row)


✅  Vérification BDD - Rôle assigné OK

🧪  Vérification BDD - Session active
 count 
-------
     1
(1 row)


✅  Vérification BDD - Session active OK

🧪  Vérification BDD - Logs d'audit
        action         
-----------------------
 signup_init
 signup_verify_success
 signup_complete
(3 rows)


   ✓ Actions principales présentes
✅  Vérification BDD - Logs d'audit OK

🧪  Vérification BDD - Mot de passe hashé
   ✓ Mot de passe correctement hashé
✅  Vérification BDD - Mot de passe hashé OK

🧪  Login avec le nouveau compte
   Access token reçu: eyJhbGciOiJIUzI1NiIs...
✅  Login avec le nouveau compte OK

🎉  Tous les tests d'onboarding Brique 4 réussis !

📋  Résumé:
   MOLAM ID créé: MOLAM-SN-95209686
   Téléphone: +2217718637496
   Email: test_18637496@molam.sn
   Statut: active
   KYC Level: P0
✅ Brique 4 - Onboarding flow - PASSED

🧪 Running Brique 5 - Session Management...
   File: test_brique5.js
🔍 Test Brique 5 – Session Management

✅ Step 1: Création utilisateur test...
❌ Erreur Brique 5: Signup init failed: {"error":"Téléphone ou email requis"}
❌ Brique 5 - Session Management - FAILED (exit code: 1)

🧪 Running Brique 6 - RBAC & AuthZ...
   File: test_brique6_authz.js
🔍 Test Brique 6 - RBAC & AuthZ Service

========================================

============================================================
PARTIE 1: CRÉATION DES COMPTES DE TEST
============================================================

🧪  1.1 - Créer un utilisateur admin
❌  1.1 - Créer un utilisateur admin échoué : 409 Conflict: {"error":"Email ou téléphone déjà utilisé"}

🧪  1.2 - Créer un utilisateur client
❌  1.2 - Créer un utilisateur client échoué : 409 Conflict: {"error":"Email ou téléphone déjà utilisé"}

============================================================
PARTIE 1.5: BOOTSTRAP ADMIN (Attribution id_admin via SQL)
============================================================

🧪  1.5 - Attribuer id_admin à l'admin via SQL
❌  1.5 - Attribuer id_admin à l'admin via SQL échoué : Command failed: docker compose exec -T db psql -U molam -d molam -c "INSERT INTO molam_user_roles (user_id, role_name, module, trusted_level, granted_by, granted_at) VALUES ('', 'id_admin', 'id', 100, NULL, NOW()) ON CONFLICT DO NOTHING;"
ERROR:  invalid input syntax for type uuid: ""
LINE 1: ...e, trusted_level, granted_by, granted_at) VALUES ('', 'id_ad...
                                                             ^


============================================================
PARTIE 2: ATTRIBUTION DES RÔLES
============================================================

🧪  2.1 - Attribuer le rôle id_admin à l'admin
❌  2.1 - Attribuer le rôle id_admin à l'admin échoué : Unexpected token '<', "<!DOCTYPE "... is not valid JSON

🧪  2.2 - Attribuer le rôle pay_client au client
❌  2.2 - Attribuer le rôle pay_client au client échoué : Unexpected token '<', "<!DOCTYPE "... is not valid JSON

============================================================
PARTIE 3: CONSULTATION DES RÔLES ET PERMISSIONS
============================================================

🧪  3.1 - Lister les rôles de l'admin
❌  3.1 - Lister les rôles de l'admin échoué : Unexpected token '<', "<!DOCTYPE "... is not valid JSON

🧪  3.2 - Lister les permissions de l'admin
❌  3.2 - Lister les permissions de l'admin échoué : Unexpected token '<', "<!DOCTYPE "... is not valid JSON

🧪  3.3 - Lister les rôles du client
❌  3.3 - Lister les rôles du client échoué : Unexpected token '<', "<!DOCTYPE "... is not valid JSON

🧪  3.4 - Lister les permissions du client
❌  3.4 - Lister les permissions du client échoué : Unexpected token '<', "<!DOCTYPE "... is not valid JSON

============================================================
PARTIE 4: DÉCISIONS D'AUTORISATION
============================================================

🧪  4.1 - Admin accède à une route admin
❌  4.1 - Admin accède à une route admin échoué : 400 Bad Request: {"error":"bad_request","message":"user_id is required"}

🧪  4.2 - Client accède à une route pay_transfer avec KYC P2
❌  4.2 - Client accède à une route pay_transfer avec KYC P2 échoué : 400 Bad Request: {"error":"bad_request","message":"user_id is required"}

🧪  4.3 - Client accède à pay_transfer avec KYC P0 (doit être refusé)
❌  4.3 - Client accède à pay_transfer avec KYC P0 (doit être refusé) échoué : 400 Bad Request: {"error":"bad_request","message":"user_id is required"}

🧪  4.4 - Client accède à pay_transfer avec SIRA score bas
❌  4.4 - Client accède à pay_transfer avec SIRA score bas échoué : 400 Bad Request: {"error":"bad_request","message":"user_id is required"}

🧪  4.5 - Client accède à une route d'un autre module
❌  4.5 - Client accède à une route d'un autre module échoué : 400 Bad Request: {"error":"bad_request","message":"user_id is required"}

============================================================
PARTIE 5: TEST DU CACHE
============================================================

🧪  5.1 - Première décision (non cached)
❌  5.1 - Première décision (non cached) échoué : 400 Bad Request: {"error":"bad_request","message":"user_id is required"}

🧪  5.2 - Deuxième décision identique (doit être cached)
❌  5.2 - Deuxième décision identique (doit être cached) échoué : 400 Bad Request: {"error":"bad_request","message":"user_id is required"}

============================================================
PARTIE 6: RÉVOCATION DE RÔLE
============================================================

🧪  6.1 - Révoquer le rôle pay_client du client
❌  6.1 - Révoquer le rôle pay_client du client échoué : Unexpected token '<', "<!DOCTYPE "... is not valid JSON

🧪  6.2 - Vérifier que le client n'a plus le rôle
❌  6.2 - Vérifier que le client n'a plus le rôle échoué : Unexpected token '<', "<!DOCTYPE "... is not valid JSON

============================================================
🎉  TESTS DE LA BRIQUE 6 TERMINÉS !
============================================================

📋  Résumé:
   Admin MOLAM ID: 
   Client MOLAM ID: 

✅  Fonctionnalités testées:
   • Attribution et révocation de rôles
   • Consultation des rôles et permissions
   • Décisions d'autorisation (allow/deny)
   • Policies ABAC (KYC level, SIRA score)
   • Isolation par module
   • Cache des décisions
   • Audit trail
✅ Brique 6 - RBAC & AuthZ - PASSED

🧪 Running Brique 7 - Audit Immuable...
   File: test_brique7.js
🔍 Test Brique 7 – Audit Logs Immuables

✅ Step 1: Health check verifier API...
   Status: ok
✅ Step 2: Insertion événement audit test...
psql: erreur : la connexion au serveur sur � localhost � (::1), port 5432 a �chou� : FATAL:  database "molam_audit" does not exist
   ⚠ Direct DB insert failed (may need docker): Command failed: psql "postgres://molam:molam_pass@localhost:5432/molam_audit" -c "       INSERT INTO audit_events (id, event_time, event_type, module, payload, record_hash, signature, signer_key_id)       VALUES (         '1efa7ce9-f03c-49c3-b893-ca94ab345770',         '2025-10-24T15:10:41.107Z',         'test.integration',         'test',         '{"test": "brique7", "timestamp": "2025-10-24T15:10:41.107Z"}',         'dGVzdC1oYXNoLTE3NjEzMTg2NDExMDg=',         'dGVzdC1zaWctMTc2MTMxODY0MTEwOA==',         'local'       );     "
psql: erreur : la connexion au serveur sur � localhost � (::1), port 5432 a �chou� : FATAL:  database "molam_audit" does not exist

   Trying via docker...
Error response from daemon: container 9f8f06e5aa6e012629f65886ca243ce3b65e90b00df2716f7ff46c433e86fefb is not running
❌ Erreur Brique 7: Command failed: docker exec molam-postgres psql -U molam -d molam_audit -c "       INSERT INTO audit_events (id, event_time, event_type, module, payload, record_hash, signature, signer_key_id)       VALUES (         '1efa7ce9-f03c-49c3-b893-ca94ab345770',         '2025-10-24T15:10:41.107Z',         'test.integration',         'test',         '{"test": "brique7", "timestamp": "2025-10-24T15:10:41.107Z"}',         'dGVzdC1oYXNoLTE3NjEzMTg2NDExMDg=',         'dGVzdC1zaWctMTc2MTMxODY0MTEwOA==',         'local'       );     "
Error response from daemon: container 9f8f06e5aa6e012629f65886ca243ce3b65e90b00df2716f7ff46c433e86fefb is not running

❌ Brique 7 - Audit Immuable - FAILED (exit code: 1)

🧪 Running Brique 8 - KYC/AML...
   File: test_brique8.js
🔍 Test Brique 8 – KYC/AML Pipeline

✅ Step 1: Health check KYC API...
   Status: ok
   Service: kyc-api
✅ Step 2: Création images de test...
❌ Erreur Brique 8: ENOENT: no such file or directory, mkdtemp '/tmp/kyc-test-XXXXXX'
❌ Brique 8 - KYC/AML - FAILED (exit code: 1)

🧪 Running Brique 9 - Extended AuthZ...
   File: test_brique9.js

╔═══════════════════════════════════════════════════════════╗
║                                                           ║
║       🧪 BRIQUE 9 - AuthZ ext_authz TEST SUITE          ║
║                                                           ║
╚═══════════════════════════════════════════════════════════╝

📋 TEST 1: Verify Brique 9 Schema
═══════════════════════════════════════════════════════════
❌ ASSERTION FAILED: All 6 Brique 9 tables exist

❌ TEST SUITE FAILED
Error: All 6 Brique 9 tables exist
Error: All 6 Brique 9 tables exist
    at assert (file:///C:/Users/lomao/Desktop/Molam/Molam-id/src/test_brique9.js:52:11)
    at test1_createSchema (file:///C:/Users/lomao/Desktop/Molam/Molam-id/src/test_brique9.js:86:3)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async runAllTests (file:///C:/Users/lomao/Desktop/Molam/Molam-id/src/test_brique9.js:519:5)
❌ Brique 9 - Extended AuthZ - FAILED (exit code: 1)

══════════════════════════════════════════════════════════════
  RÉSUMÉ DES TESTS
══════════════════════════════════════════════════════════════

Durée totale: 12.78s

✅ PASSED  : 6
   - Brique 1 - Table molam_users
   - Brique 2 - Token refresh
   - Brique 3 - Logout
   - Brique 4 - Onboarding foundations
   - Brique 4 - Onboarding flow
   - Brique 6 - RBAC & AuthZ

❌ FAILED  : 4
   - Brique 5 - Session Management
   - Brique 7 - Audit Immuable
   - Brique 8 - KYC/AML
   - Brique 9 - Extended AuthZ

⚠️  SKIPPED : 0

Taux de réussite: 60.0% (6/10)

══════════════════════════════════════════════════════════════
  PAR CATÉGORIE
══════════════════════════════════════════════════════════════

AUTH:
  ✅ 3 | ❌ 1 | ⚠️  0 | 75.0%
ONBOARDING:
  ✅ 2 | ❌ 0 | ⚠️  0 | 100.0%
AUTHZ:
  ✅ 1 | ❌ 1 | ⚠️  0 | 50.0%
AUDIT:
  ✅ 0 | ❌ 1 | ⚠️  0 | 0.0%
KYC:
  ✅ 0 | ❌ 1 | ⚠️  0 | 0.0%

📊 Rapport sauvegardé: C:\Users\lomao\Desktop\Molam\Molam-id\test-report.json

══════════════════════════════════════════════════════════════

