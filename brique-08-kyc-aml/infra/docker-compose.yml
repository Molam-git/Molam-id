version: '3.8'
services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: molam_kyc
      POSTGRES_USER: molam
      POSTGRES_PASSWORD: molam_pass
    ports: ["5435:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ../sql:/docker-entrypoint-initdb.d

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports: ["9002:9000","9003:9001"]
    volumes:
      - miniodata:/data

  kyc-api:
    build: ../services/kyc-api
    environment:
      POSTGRES_DSN: postgres://molam:molam_pass@postgres:5432/molam_kyc
      S3_ENDPOINT: http://minio:9000
      S3_BUCKET: molam-kyc
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      KMS_KEY_ID: alias/aws/s3
      AWS_REGION: us-east-1
      PORT: "4201"
      KYC_WEBHOOK_SECRET: "super_secret_webhook_key_change_in_prod"
    ports: ["4201:4201"]
    depends_on: [ postgres, minio ]
    restart: unless-stopped

  kyc-processor:
    build: ../services/kyc-processor
    environment:
      POSTGRES_DSN: postgres://molam:molam_pass@postgres:5432/molam_kyc
      S3_ENDPOINT: http://minio:9000
      S3_BUCKET: molam-kyc
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      USE_MOCK_OCR: "true"
      USE_MOCK_LIVENESS: "true"
      USE_MOCK_SANCTIONS: "true"
      PROCESS_INTERVAL_MS: "5000"
    depends_on: [ postgres, minio ]
    restart: unless-stopped

volumes:
  pgdata:
  miniodata:
